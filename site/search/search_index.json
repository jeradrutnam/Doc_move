{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Index","title":"Home"},{"location":"#index","text":"","title":"Index"},{"location":"Developer_Guide/","text":"Developer Guide The WSO2 Update TESTING Creator tool (wum-uc) is designed to help you create and validate updates that are compatible with WUM. It is written in GO language. As a result, you can compile the code directly to machine code without using the JVM. Cross compiling is also possible. This document describes how to use the Update Creator tool to create an update directly or convert a patch to an update. Before you begin, here are the descriptions of the files used in this guide. The wum-uc tool generates both these files. {.expand-control-image}update-descriptor3.yaml file This is a newly introduced file that contains details about the update that complies with WUM 3.0.0 . Every update has an update-descriptor3.yaml file. It has details about the products that this update is fully or partially compatible with, the file changes (added, removed, or modified), descriptions, and instructions. A sample file looks like the following: update_number: 2922 platform_version: 4.4.0 platform_name: wilkes md5sum: 8f6e83731dc1da6634c6d24c92606d06 description: | Details about the update for wso2am-2.1.0.standard Details about the update for wso2am-2.0.0.standard Details about the update for wso2esb-5.0.0.standard Details about the update for wso2is-km-5.3.0.standard instructions: | Instructions for wso2am-2.1.0.standard Instructions for wso2am-2.0.0.standard Instructions for wso2esb-5.0.0.standard Instructions for wso2is-km-5.3.0.standard bug_fixes: JIRA_ID: Summary compatible_products: - product_name: wso2am product_version: 2.1.0.standard added_files: [] removed_files: - repository/components/plugins/org.wso2.carbon.governance.lcm_4.7.0.jar modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - repository/components/plugins/oltu_1.0.0.wso2v3.jar partially_applicable_products: - product_name: wso2am product_version: 2.0.0.standard added_files: [] removed_files: [] modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - repository/components/plugins/oltu_1.0.0.wso2v3.jar - product_name: wso2esb product_version: 5.0.0.standard added_files: [] removed_files: [] modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - product_name: wso2is-km product_version: 5.3.0.standard added_files: [] removed_files: [] modified_files: - repository/components/plugins/oltu_1.0.0.wso2v3.jar In WUM 2.0.0, we used update-descriptor.yaml . The reason to introduce a new file in WUM 3.0.0 is because WUM 3.0.0 s upports partial updates. For example, in the above sample, the update numbered 2922 gets fully applied to wso2am-2.1.0.standard product while it gets partially applied to wso2am- 2.0.0.standard , wso2esb-5.0.0.standard, and wso2is-km-5.3.0.standard products. You should manually fill in the description, instructions, and the bug_fixes fields of the update-descriptor3.yaml file according to the products listed in it. W hen filling the description and instructions sections of an update that gets fully or partially applied to multiple products, use paragraphs to separate the description per product. Be careful not to break the initial indentation though as that results in a malformed YAML. Given below is an example of a description that has multiple paragraphs: description: | Details about the update for wso2am-2.1.0.standard, this paragraph only contains details regarding wso2am-2.1.0.standard Details about the update for wso2am-2.0.0.standard, this paragraph only contains details regarding wso2am-2.0.0.standard Details about the update for wso2esb-5.0.0.standard, this paragraph only contains details regarding wso2esb-5.0.0.standard Details about the update for wso2is-km-5.3.0.standard, this paragraph only contains details regarding wso2is-km-5.3.0.standard Here's an example of a malformed YAML. The malformation is caused by YAML treating the entire sentence 'Details about the update for wso2am-2.0.0.standard, this paragraph only contains details regarding wso2am-2.0.0.standard' as a key. The same applies to the instructions field as well. description: | Details about the update for wso2am-2.1.0.standard, this paragraph only contains details regarding wso2am-2.1.0.standard Details about the update for wso2am-2.0.0.standard, this paragraph only contains details regarding wso2am-2.0.0.standard If there are no bug fixes, enter N/A in the JIRA_ID and Summary fields. I f there are no instructions, leave a blank line as follows: {width=\"150\"} Note that you do not manually modify the added_files and modified_files sections like in the previous versions of the tool. They are added automatically by the tool. In cases where the version of a JAR file is updated, remove the old JAR file and provide path to the removed file when prompted by the wum-uc tool . {.expand-control-image}update-descriptor.yaml file This file will be discontinued when WUM 2.0.0 gets deprecated. The update-descriptor.yaml file is used to identify update details by WUM 2.0.0. It will get created by the wum-uc tool along with the previous YAML file until wum 2.0.0 gets deprecated. You will be prompted to provide inputs for applies_to, bug_fixes, and description fields. Given below is a sample update-descriptor.yaml file: update_number: 2922 platform_version: 4.4.0 platform_name: wilkes applies_to: wso2das-3.1.0 bug_fixes: JIRA_ID: Summary description: Details about the update for wso2das-3.1.0 file_changes: added_files: [] removed_files: - repository/components/plugins/org.wso2.carbon.governance.lcm_4.7.0.jar modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - repository/components/plugins/oltu_1.0.0.wso2v3.jar If there are no bug fixes, enter N/A in the JIRA_ID and Summary fields. Let's start using the Update Creator tool. Download the tool Set the environment variables Build the tool (optional) Initialize the tool Create an update directly Commit the created ZIP file to SVN Convert old patches to WUM-updates Download the tool Go to the release section of GitHub to download the tool. Set the environment variables If you want to run the tool from anywhere, add it to the system PATH variable. For example, this is the command for Ubuntu: java export PATH=$PATH:[ENTER_PATH_TO_BIN_HERE] Set the LICENSE_MD5 environment variable: java LICENSE_MD5=84d7cad403ae420940cd0f62bec1b520 Build the tool (optional) Follow the steps below if you want to built the tool yourself. Download GO from its official website and install it. You need GO to compile and run this tool. Run the following command to download and install the packages along with their dependencies: java go get -u github.com/wso2/update-creator-tool Open the update-creator-tool/constant/constants.go file of the cloned repository and replace the value of the constant BASE64_ENCODED_CONSUMER_KEY_AND_SECRET with the following: java BASE64_ENCODED_CONSUMER_KEY_AND_SECRET= \"N01ENDRMM21HcVhrOTlXTDM2N19na1lPNTgwYTpVaEQxSzlwbzVDUF9BaExLUFhUS3Bqc0FMbU1h\" Run build.sh to generate the executable files for various OS/architecture combinations. These files are located in the build/target/ directory. Extract the relevant ZIP file to your OS/architecture. Find the executable wum-uc file in the bin directory. Initialize the tool Run the following command to initialize wum-uc: java wum-uc init When prompted, give your WSO2 username and password. Note that the .wum-uc directory is created. Let's call it in this guide. Create an update directly Follow below steps to create an update. Create a directory (let's call this ) and copy the following files that need to be in your update: All updated files (e.g., binary and resource files). The instructions.txt (required only till WUM 2.0 gets depreciated). Note : Do not copy LICENSE.txt and NOT_A_CONTRIBUTION.txt as they get automatically added bythe tool. Run the following command to create the update: ``` java wum-uc create // : the path to // : path to the latest WUM-updated distribution that you obtained by pointing WUM to the live environment (i.e., 'url: https://api.updates.wso2.com') ``` Give the relevant update number when prompted. When prompted, select the relevant platform version that you are creating the update for. java Select the platform name and version from following: 1. wilkes 4.4.0 2. hamming 5.0.0 Enter your preference [1/2]: When prompted for removed files: Press 'n' if no files are removed from this update. Press 'y' for adding removed files and enter the path of the removed files relative to . When you are done with adding removed files, press 'Enter' without any inputs. When prompted, confirm that you are done adding inputs by pressing 'y' for yes or 'n' for no. Enter the following when prompted. Note that these are required only until WUM 2.0 gets depreciated. The names of product/s for the 'applies to' field. The JIRA keys and summaries relevant to the update. (Press 'Enter' when you are done). The description for the created update. Note that the update ZIP is created in the location from where you execute wum-uc. The tool displays a summary of the update creation. {.expand-control-image}Click to see an example... Here's an example: ``` java 'update-descriptor.yaml' has been successfully created in '/home/kasun/Documents/wum-uc/demo'. Optional resource file 'instructions.txt' not copied. 'update-descriptor3.yaml' has been successfully created in '/home/kasun/Documents/wum-uc/demo'. 'WSO2-CARBON-UPDATE-4.4.0-2923.zip' successfully created. Your update applies to the following products Compatible products : [wso2am] Partially applicable products : [wso2esb wso2is-km wso2am] Notify products : [wso2ei wso2iot] Manually fill the 'description','instructions' and 'bug_fixes' fields for above products in the update-descriptor3.yaml located inside the created 'WSO2-CARBON-UPDATE-4.4.0-2923.zip' ``` As shown in the Notify products field of the above summary, the update can be applied to the products wso2ei and wso2iot as well. However, due to the differences in the directory structures of the above products, it is the responsibility of the developer to create seperate updates for them in the Notify products field. Commit the created ZIP file to SVN Before commiting the file, do a manual inspection of its directory structure and the entries in the update-descriptor3.yaml and update-descriptor.yaml files. For Wilkes, the update repository location is https://svn.wso2.com/wso2/custom/projects/projects/carbon/wilkes/updates . When changing the lifecycle state of the created update from Development to Staging, you see a newly added check as follows. Click it. {width=\"200\"} You get directed to a seperate page as follows: Click GET UPDATE YAML to see the YAML information as follows: {width=\"500\"} Verify the YAML information and click GET PRODUCT LIST to see the product details as follows: {width=\"550\"} Verify the product details and click CONTINUE. You get a page as follows. Update it with the products relevant for your update number. {width=\"600\"} Some samples for the UPDATE_LOCATION directory are shown below: {.expand-control-image}Sample 1 \u251c\u2500\u2500 axis2_1.6.1.wso2v16.jar \u251c\u2500\u2500 instructions.txt \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 synapse-core_2.1.5.wso2v2.jar \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml {.expand-control-image}Sample 2 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 oauth2.war \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml {.expand-control-image}Sample 3 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 org.wso2.carbon.apimgt.hostobjects_5.0.3.jar \u251c\u2500\u2500 store \u2502 \u251c\u2500\u2500 modules \u2502 \u2502 \u2514\u2500\u2500 subscription \u2502 \u2502 \u251c\u2500\u2500 list.jag \u2502 \u2502 \u2514\u2500\u2500 module.jag \u2502 \u2514\u2500\u2500 site \u2502 \u2514\u2500\u2500 blocks \u2502 \u2514\u2500\u2500 subscription \u2502 \u2514\u2500\u2500 subscription-list \u2502 \u251c\u2500\u2500 ajax \u2502 \u2502 \u2514\u2500\u2500 subscription-list.jag \u2502 \u2514\u2500\u2500 block.jag \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml {.expand-control-image}Sample 4 \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 tomcat-juli-7.0.69.jar \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 endorsed \u2502 \u2514\u2500\u2500 tomcat-annotations-api-7.0.69.jar \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 org.wso2.carbon.tomcat_4.4.3.jar \u251c\u2500\u2500 tomcat_7.0.59.wso2v3.jar \u251c\u2500\u2500 tomcat-catalina-ha_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-el-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-jsp-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-servlet-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml Convert old patches to WUM-updates Sample 1: Basic scenario Sample 2: Update with resource files Sample 3: When the patch has config changes Sample 1: Basic scenario Let's convert the WSO2-CARBON-PATCH-4.4.0\u20130001.zip to the WUM update format. Extract the WSO2-CARBON-PATCH-4.4.0\u20130001.zip . We call this location < PatchDir> . Note that the structure of the is as follows: java PatchDir \u2514\u2500\u2500 WSO2-CARBON-PATCH-4.4.0\u20130001 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 patch0001 \u2502 \u2514\u2500\u2500 hazelcast_3.5.0.wso2v1.jar \u251c\u2500\u2500 README.txt \u2514\u2500\u2500 wso2carbon-version.txt All the file changes are in < PatchDir>/WSO2-CARBON-PATCH-4.4.0\u20130001/patch0001 . Copy the content of the patch0001 directory to WSO2-CARBON-PATCH-4.4.0\u20130001 directory (parent directory of patch0001 directory) and delete patch0001 directory. Delete wso2carbon-version.txt, LICENSE.txt, and NOT_A_CONTRIBUTION.txt files from the above directory. Note that the new directory structure looks as follows: java \u2500\u2500 WSO2-CARBON-PATCH-4.4.0\u20130001 \u251c\u2500\u2500 hazelcast_3.5.0.wso2v1.jar \u251c\u2500\u2500 README.txt Follow the update creation process mentioned above to create the update. Note that if successful, the c reated WSO2-CARBON-UPDATE-4.4.0\u20130001.zip should be located at the current working directory. You can validate this using the wum-uc validate command. Sample 2: Update with resource files Follow the steps below to convert WSO2-CARBON-PATCH-4.4.0\u20130237.zip to WUM update format. Extract the WSO2-CARBON-PATCH-4.4.0\u20130237.zip file. We call this location . Note that the structure of the is as follows. Read the README.txt for more information about the patch. java WSO2-CARBON-PATCH-4.4.0-0237 \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 tomcat-juli-7.0.69.jar \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 endorsed \u2502 \u2514\u2500\u2500 tomcat-annotations-api-7.0.69.jar \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 patch0237 \u2502 \u251c\u2500\u2500 org.wso2.carbon.tomcat_4.4.1.jar \u2502 \u251c\u2500\u2500 tomcat_7.0.59.wso2v3.jar \u2502 \u251c\u2500\u2500 tomcat-catalina-ha_7.0.59.wso2v1.jar \u2502 \u251c\u2500\u2500 tomcat-el-api_7.0.59.wso2v1.jar \u2502 \u251c\u2500\u2500 tomcat-jsp-api_7.0.59.wso2v1.jar \u2502 \u2514\u2500\u2500 tomcat-servlet-api_7.0.59.wso2v1.jar \u2514\u2500\u2500 README.txt Move the content of the patch0237 directory to the WSO2-CARBON-PATCH-4.4.0\u20130237 directory and delete patch0237 . Delete the LICENSE.txt file from the WSO2-CARBON-PATCH-4.4.0\u20130237 directory. Note that the new directory structure should as follows: java WSO2-CARBON-PATCH-4.4.0-0237 \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 tomcat-juli-7.0.69.jar \u251c\u2500\u2500 instructions.txt \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 endorsed \u2502 \u2514\u2500\u2500 tomcat-annotations-api-7.0.69.jar \u251c\u2500\u2500 org.wso2.carbon.tomcat_4.4.1.jar \u251c\u2500\u2500 README.txt \u251c\u2500\u2500 tomcat_7.0.59.wso2v3.jar \u251c\u2500\u2500 tomcat-catalina-ha_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-el-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-jsp-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-servlet-api_7.0.59.wso2v1.jar Follow the update creation process mentioned above to create the update. Note that, if successful, the WSO2-CARBON-UPDATE-4.4.0\u20130237.zip file will be created in the current working directory. You can validate it using the wum-uc validate command. Sample 3: When the patch has config changes Follow the steps below to convert the WSO2-CARBON-PATCH-4.4.0\u20130478.zip file to new WUM update format when the patch has configuration changes. Extract the patch and move the content of the patch0478 directory to the parent directory. java WSO2-CARBON-PATCH-4.4.0-0478 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 README.txt \u251c\u2500\u2500 synapse-core_2.1.5.wso2v2.jar \u2514\u2500\u2500 update-descriptor.yaml Note in the README.txt that there are configuration changes added in this patch. You need to add these instructions in an instructions.txt file until WUM 2.0 gets officially deprecated. After it is deprecated, same content above should be added to the instructions field of the new update-descriptor3.yaml file after successfully creating the update. {.expand-control-image}Expand to see a sample instructions.txt file... ``` java When the org.wso2.carbon.identity.mgt.IdentityMgtEventListener is enabled via configuration in repository/conf/identity/identity.xml, it engages CacheClearingUserOperationListener which clears the policy cache. This should be configurable through configuration. This step is optional, and is only required if you need to disable the immediate cache invalidation. Copy following xml content into identity.xml as the very first element under the element. ``` Note that the new directory structure looks as follows: java WSO2-CARBON-PATCH-4.4.0-0478 \u251c\u2500\u2500 instructions.txt \u251c\u2500\u2500 README.txt \u2514\u2500\u2500 synapse-core_2.1.5.wso2v2.jar Follow the update creation process mentioned above to create the update. Note that, if successful, the WSO2-CARBON-UPDATE-4.4.0\u20130478.zip file will be created in the current working directory. You can validated it using the wum-uc validate command. Attachments: {width=\"8\" height=\"8\"} overview-products.png (image/png) {width=\"8\" height=\"8\"} Product-details.png (image/png) {width=\"8\" height=\"8\"} get-updated-YAML.png (image/png) {width=\"8\" height=\"8\"} YAML-description.png (image/png) {width=\"8\" height=\"8\"} blank-line.png (image/png) {width=\"8\" height=\"8\"} image2018-8-10_17-37-18.png (image/png)","title":"Developer Guide"},{"location":"Developer_Guide/#developer-guide","text":"The WSO2 Update TESTING Creator tool (wum-uc) is designed to help you create and validate updates that are compatible with WUM. It is written in GO language. As a result, you can compile the code directly to machine code without using the JVM. Cross compiling is also possible. This document describes how to use the Update Creator tool to create an update directly or convert a patch to an update. Before you begin, here are the descriptions of the files used in this guide. The wum-uc tool generates both these files. {.expand-control-image}update-descriptor3.yaml file This is a newly introduced file that contains details about the update that complies with WUM 3.0.0 . Every update has an update-descriptor3.yaml file. It has details about the products that this update is fully or partially compatible with, the file changes (added, removed, or modified), descriptions, and instructions. A sample file looks like the following: update_number: 2922 platform_version: 4.4.0 platform_name: wilkes md5sum: 8f6e83731dc1da6634c6d24c92606d06 description: | Details about the update for wso2am-2.1.0.standard Details about the update for wso2am-2.0.0.standard Details about the update for wso2esb-5.0.0.standard Details about the update for wso2is-km-5.3.0.standard instructions: | Instructions for wso2am-2.1.0.standard Instructions for wso2am-2.0.0.standard Instructions for wso2esb-5.0.0.standard Instructions for wso2is-km-5.3.0.standard bug_fixes: JIRA_ID: Summary compatible_products: - product_name: wso2am product_version: 2.1.0.standard added_files: [] removed_files: - repository/components/plugins/org.wso2.carbon.governance.lcm_4.7.0.jar modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - repository/components/plugins/oltu_1.0.0.wso2v3.jar partially_applicable_products: - product_name: wso2am product_version: 2.0.0.standard added_files: [] removed_files: [] modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - repository/components/plugins/oltu_1.0.0.wso2v3.jar - product_name: wso2esb product_version: 5.0.0.standard added_files: [] removed_files: [] modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - product_name: wso2is-km product_version: 5.3.0.standard added_files: [] removed_files: [] modified_files: - repository/components/plugins/oltu_1.0.0.wso2v3.jar In WUM 2.0.0, we used update-descriptor.yaml . The reason to introduce a new file in WUM 3.0.0 is because WUM 3.0.0 s upports partial updates. For example, in the above sample, the update numbered 2922 gets fully applied to wso2am-2.1.0.standard product while it gets partially applied to wso2am- 2.0.0.standard , wso2esb-5.0.0.standard, and wso2is-km-5.3.0.standard products. You should manually fill in the description, instructions, and the bug_fixes fields of the update-descriptor3.yaml file according to the products listed in it. W hen filling the description and instructions sections of an update that gets fully or partially applied to multiple products, use paragraphs to separate the description per product. Be careful not to break the initial indentation though as that results in a malformed YAML. Given below is an example of a description that has multiple paragraphs: description: | Details about the update for wso2am-2.1.0.standard, this paragraph only contains details regarding wso2am-2.1.0.standard Details about the update for wso2am-2.0.0.standard, this paragraph only contains details regarding wso2am-2.0.0.standard Details about the update for wso2esb-5.0.0.standard, this paragraph only contains details regarding wso2esb-5.0.0.standard Details about the update for wso2is-km-5.3.0.standard, this paragraph only contains details regarding wso2is-km-5.3.0.standard Here's an example of a malformed YAML. The malformation is caused by YAML treating the entire sentence 'Details about the update for wso2am-2.0.0.standard, this paragraph only contains details regarding wso2am-2.0.0.standard' as a key. The same applies to the instructions field as well. description: | Details about the update for wso2am-2.1.0.standard, this paragraph only contains details regarding wso2am-2.1.0.standard Details about the update for wso2am-2.0.0.standard, this paragraph only contains details regarding wso2am-2.0.0.standard If there are no bug fixes, enter N/A in the JIRA_ID and Summary fields. I f there are no instructions, leave a blank line as follows: {width=\"150\"} Note that you do not manually modify the added_files and modified_files sections like in the previous versions of the tool. They are added automatically by the tool. In cases where the version of a JAR file is updated, remove the old JAR file and provide path to the removed file when prompted by the wum-uc tool . {.expand-control-image}update-descriptor.yaml file This file will be discontinued when WUM 2.0.0 gets deprecated. The update-descriptor.yaml file is used to identify update details by WUM 2.0.0. It will get created by the wum-uc tool along with the previous YAML file until wum 2.0.0 gets deprecated. You will be prompted to provide inputs for applies_to, bug_fixes, and description fields. Given below is a sample update-descriptor.yaml file: update_number: 2922 platform_version: 4.4.0 platform_name: wilkes applies_to: wso2das-3.1.0 bug_fixes: JIRA_ID: Summary description: Details about the update for wso2das-3.1.0 file_changes: added_files: [] removed_files: - repository/components/plugins/org.wso2.carbon.governance.lcm_4.7.0.jar modified_files: - repository/components/plugins/io.netty.handler_4.0.30.Final.jar - repository/components/plugins/oltu_1.0.0.wso2v3.jar If there are no bug fixes, enter N/A in the JIRA_ID and Summary fields. Let's start using the Update Creator tool. Download the tool Set the environment variables Build the tool (optional) Initialize the tool Create an update directly Commit the created ZIP file to SVN Convert old patches to WUM-updates","title":"Developer Guide"},{"location":"Developer_Guide/#download-the-tool","text":"Go to the release section of GitHub to download the tool.","title":"Download the tool"},{"location":"Developer_Guide/#set-the-environment-variables","text":"If you want to run the tool from anywhere, add it to the system PATH variable. For example, this is the command for Ubuntu: java export PATH=$PATH:[ENTER_PATH_TO_BIN_HERE] Set the LICENSE_MD5 environment variable: java LICENSE_MD5=84d7cad403ae420940cd0f62bec1b520","title":"Set the environment variables"},{"location":"Developer_Guide/#build-the-tool-optional","text":"Follow the steps below if you want to built the tool yourself. Download GO from its official website and install it. You need GO to compile and run this tool. Run the following command to download and install the packages along with their dependencies: java go get -u github.com/wso2/update-creator-tool Open the update-creator-tool/constant/constants.go file of the cloned repository and replace the value of the constant BASE64_ENCODED_CONSUMER_KEY_AND_SECRET with the following: java BASE64_ENCODED_CONSUMER_KEY_AND_SECRET= \"N01ENDRMM21HcVhrOTlXTDM2N19na1lPNTgwYTpVaEQxSzlwbzVDUF9BaExLUFhUS3Bqc0FMbU1h\" Run build.sh to generate the executable files for various OS/architecture combinations. These files are located in the build/target/ directory. Extract the relevant ZIP file to your OS/architecture. Find the executable wum-uc file in the bin directory.","title":"Build the tool (optional)"},{"location":"Developer_Guide/#initialize-the-tool","text":"Run the following command to initialize wum-uc: java wum-uc init When prompted, give your WSO2 username and password. Note that the .wum-uc directory is created. Let's call it in this guide.","title":"Initialize the tool"},{"location":"Developer_Guide/#create-an-update-directly","text":"Follow below steps to create an update. Create a directory (let's call this ) and copy the following files that need to be in your update: All updated files (e.g., binary and resource files). The instructions.txt (required only till WUM 2.0 gets depreciated). Note : Do not copy LICENSE.txt and NOT_A_CONTRIBUTION.txt as they get automatically added bythe tool. Run the following command to create the update: ``` java wum-uc create // : the path to // : path to the latest WUM-updated distribution that you obtained by pointing WUM to the live environment (i.e., 'url: https://api.updates.wso2.com') ``` Give the relevant update number when prompted. When prompted, select the relevant platform version that you are creating the update for. java Select the platform name and version from following: 1. wilkes 4.4.0 2. hamming 5.0.0 Enter your preference [1/2]: When prompted for removed files: Press 'n' if no files are removed from this update. Press 'y' for adding removed files and enter the path of the removed files relative to . When you are done with adding removed files, press 'Enter' without any inputs. When prompted, confirm that you are done adding inputs by pressing 'y' for yes or 'n' for no. Enter the following when prompted. Note that these are required only until WUM 2.0 gets depreciated. The names of product/s for the 'applies to' field. The JIRA keys and summaries relevant to the update. (Press 'Enter' when you are done). The description for the created update. Note that the update ZIP is created in the location from where you execute wum-uc. The tool displays a summary of the update creation. {.expand-control-image}Click to see an example... Here's an example: ``` java 'update-descriptor.yaml' has been successfully created in '/home/kasun/Documents/wum-uc/demo'. Optional resource file 'instructions.txt' not copied. 'update-descriptor3.yaml' has been successfully created in '/home/kasun/Documents/wum-uc/demo'. 'WSO2-CARBON-UPDATE-4.4.0-2923.zip' successfully created. Your update applies to the following products Compatible products : [wso2am] Partially applicable products : [wso2esb wso2is-km wso2am] Notify products : [wso2ei wso2iot] Manually fill the 'description','instructions' and 'bug_fixes' fields for above products in the update-descriptor3.yaml located inside the created 'WSO2-CARBON-UPDATE-4.4.0-2923.zip' ``` As shown in the Notify products field of the above summary, the update can be applied to the products wso2ei and wso2iot as well. However, due to the differences in the directory structures of the above products, it is the responsibility of the developer to create seperate updates for them in the Notify products field.","title":"Create an update directly"},{"location":"Developer_Guide/#commit-the-created-zip-file-to-svn","text":"Before commiting the file, do a manual inspection of its directory structure and the entries in the update-descriptor3.yaml and update-descriptor.yaml files. For Wilkes, the update repository location is https://svn.wso2.com/wso2/custom/projects/projects/carbon/wilkes/updates . When changing the lifecycle state of the created update from Development to Staging, you see a newly added check as follows. Click it. {width=\"200\"} You get directed to a seperate page as follows: Click GET UPDATE YAML to see the YAML information as follows: {width=\"500\"} Verify the YAML information and click GET PRODUCT LIST to see the product details as follows: {width=\"550\"} Verify the product details and click CONTINUE. You get a page as follows. Update it with the products relevant for your update number. {width=\"600\"} Some samples for the UPDATE_LOCATION directory are shown below: {.expand-control-image}Sample 1 \u251c\u2500\u2500 axis2_1.6.1.wso2v16.jar \u251c\u2500\u2500 instructions.txt \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 synapse-core_2.1.5.wso2v2.jar \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml {.expand-control-image}Sample 2 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 oauth2.war \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml {.expand-control-image}Sample 3 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 org.wso2.carbon.apimgt.hostobjects_5.0.3.jar \u251c\u2500\u2500 store \u2502 \u251c\u2500\u2500 modules \u2502 \u2502 \u2514\u2500\u2500 subscription \u2502 \u2502 \u251c\u2500\u2500 list.jag \u2502 \u2502 \u2514\u2500\u2500 module.jag \u2502 \u2514\u2500\u2500 site \u2502 \u2514\u2500\u2500 blocks \u2502 \u2514\u2500\u2500 subscription \u2502 \u2514\u2500\u2500 subscription-list \u2502 \u251c\u2500\u2500 ajax \u2502 \u2502 \u2514\u2500\u2500 subscription-list.jag \u2502 \u2514\u2500\u2500 block.jag \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml {.expand-control-image}Sample 4 \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 tomcat-juli-7.0.69.jar \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 endorsed \u2502 \u2514\u2500\u2500 tomcat-annotations-api-7.0.69.jar \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 org.wso2.carbon.tomcat_4.4.3.jar \u251c\u2500\u2500 tomcat_7.0.59.wso2v3.jar \u251c\u2500\u2500 tomcat-catalina-ha_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-el-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-jsp-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-servlet-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 update-descriptor3.yaml \u2514\u2500\u2500 update-descriptor.yaml","title":"Commit the created ZIP file to SVN"},{"location":"Developer_Guide/#convert-old-patches-to-wum-updates","text":"Sample 1: Basic scenario Sample 2: Update with resource files Sample 3: When the patch has config changes","title":"Convert old patches to WUM-updates"},{"location":"Developer_Guide/#sample-1-basic-scenario","text":"Let's convert the WSO2-CARBON-PATCH-4.4.0\u20130001.zip to the WUM update format. Extract the WSO2-CARBON-PATCH-4.4.0\u20130001.zip . We call this location < PatchDir> . Note that the structure of the is as follows: java PatchDir \u2514\u2500\u2500 WSO2-CARBON-PATCH-4.4.0\u20130001 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 patch0001 \u2502 \u2514\u2500\u2500 hazelcast_3.5.0.wso2v1.jar \u251c\u2500\u2500 README.txt \u2514\u2500\u2500 wso2carbon-version.txt All the file changes are in < PatchDir>/WSO2-CARBON-PATCH-4.4.0\u20130001/patch0001 . Copy the content of the patch0001 directory to WSO2-CARBON-PATCH-4.4.0\u20130001 directory (parent directory of patch0001 directory) and delete patch0001 directory. Delete wso2carbon-version.txt, LICENSE.txt, and NOT_A_CONTRIBUTION.txt files from the above directory. Note that the new directory structure looks as follows: java \u2500\u2500 WSO2-CARBON-PATCH-4.4.0\u20130001 \u251c\u2500\u2500 hazelcast_3.5.0.wso2v1.jar \u251c\u2500\u2500 README.txt Follow the update creation process mentioned above to create the update. Note that if successful, the c reated WSO2-CARBON-UPDATE-4.4.0\u20130001.zip should be located at the current working directory. You can validate this using the wum-uc validate command.","title":"Sample 1: Basic scenario"},{"location":"Developer_Guide/#sample-2-update-with-resource-files","text":"Follow the steps below to convert WSO2-CARBON-PATCH-4.4.0\u20130237.zip to WUM update format. Extract the WSO2-CARBON-PATCH-4.4.0\u20130237.zip file. We call this location . Note that the structure of the is as follows. Read the README.txt for more information about the patch. java WSO2-CARBON-PATCH-4.4.0-0237 \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 tomcat-juli-7.0.69.jar \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 endorsed \u2502 \u2514\u2500\u2500 tomcat-annotations-api-7.0.69.jar \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 patch0237 \u2502 \u251c\u2500\u2500 org.wso2.carbon.tomcat_4.4.1.jar \u2502 \u251c\u2500\u2500 tomcat_7.0.59.wso2v3.jar \u2502 \u251c\u2500\u2500 tomcat-catalina-ha_7.0.59.wso2v1.jar \u2502 \u251c\u2500\u2500 tomcat-el-api_7.0.59.wso2v1.jar \u2502 \u251c\u2500\u2500 tomcat-jsp-api_7.0.59.wso2v1.jar \u2502 \u2514\u2500\u2500 tomcat-servlet-api_7.0.59.wso2v1.jar \u2514\u2500\u2500 README.txt Move the content of the patch0237 directory to the WSO2-CARBON-PATCH-4.4.0\u20130237 directory and delete patch0237 . Delete the LICENSE.txt file from the WSO2-CARBON-PATCH-4.4.0\u20130237 directory. Note that the new directory structure should as follows: java WSO2-CARBON-PATCH-4.4.0-0237 \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 tomcat-juli-7.0.69.jar \u251c\u2500\u2500 instructions.txt \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 endorsed \u2502 \u2514\u2500\u2500 tomcat-annotations-api-7.0.69.jar \u251c\u2500\u2500 org.wso2.carbon.tomcat_4.4.1.jar \u251c\u2500\u2500 README.txt \u251c\u2500\u2500 tomcat_7.0.59.wso2v3.jar \u251c\u2500\u2500 tomcat-catalina-ha_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-el-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-jsp-api_7.0.59.wso2v1.jar \u251c\u2500\u2500 tomcat-servlet-api_7.0.59.wso2v1.jar Follow the update creation process mentioned above to create the update. Note that, if successful, the WSO2-CARBON-UPDATE-4.4.0\u20130237.zip file will be created in the current working directory. You can validate it using the wum-uc validate command.","title":"Sample 2: Update with resource files"},{"location":"Developer_Guide/#sample-3-when-the-patch-has-config-changes","text":"Follow the steps below to convert the WSO2-CARBON-PATCH-4.4.0\u20130478.zip file to new WUM update format when the patch has configuration changes. Extract the patch and move the content of the patch0478 directory to the parent directory. java WSO2-CARBON-PATCH-4.4.0-0478 \u251c\u2500\u2500 LICENSE.txt \u251c\u2500\u2500 NOT_A_CONTRIBUTION.txt \u251c\u2500\u2500 README.txt \u251c\u2500\u2500 synapse-core_2.1.5.wso2v2.jar \u2514\u2500\u2500 update-descriptor.yaml Note in the README.txt that there are configuration changes added in this patch. You need to add these instructions in an instructions.txt file until WUM 2.0 gets officially deprecated. After it is deprecated, same content above should be added to the instructions field of the new update-descriptor3.yaml file after successfully creating the update. {.expand-control-image}Expand to see a sample instructions.txt file... ``` java When the org.wso2.carbon.identity.mgt.IdentityMgtEventListener is enabled via configuration in repository/conf/identity/identity.xml, it engages CacheClearingUserOperationListener which clears the policy cache. This should be configurable through configuration. This step is optional, and is only required if you need to disable the immediate cache invalidation. Copy following xml content into identity.xml as the very first element under the element. ``` Note that the new directory structure looks as follows: java WSO2-CARBON-PATCH-4.4.0-0478 \u251c\u2500\u2500 instructions.txt \u251c\u2500\u2500 README.txt \u2514\u2500\u2500 synapse-core_2.1.5.wso2v2.jar Follow the update creation process mentioned above to create the update. Note that, if successful, the WSO2-CARBON-UPDATE-4.4.0\u20130478.zip file will be created in the current working directory. You can validated it using the wum-uc validate command.","title":"Sample 3: When the patch has config changes"},{"location":"Developer_Guide/#attachments","text":"{width=\"8\" height=\"8\"} overview-products.png (image/png) {width=\"8\" height=\"8\"} Product-details.png (image/png) {width=\"8\" height=\"8\"} get-updated-YAML.png (image/png) {width=\"8\" height=\"8\"} YAML-description.png (image/png) {width=\"8\" height=\"8\"} blank-line.png (image/png) {width=\"8\" height=\"8\"} image2018-8-10_17-37-18.png (image/png)","title":"Attachments:"},{"location":"FAQ/","text":"FAQ Can I use updates without a paid subscription? What benefits do I get from a paid subscription? Do I need a key to unlock updates for production? Can I choose which updates to install? What license are WSO2 updates on? How frequently is it recommended to get updates? Should I test my updates? How do I know when updates are available? What can I do in case of an issue? How can I know what changes are included in an update? I get an error as 'You do not have an active subscription or the channel does not exist'. What should I do? I get the error as 'invalid credentials. Please enter valid WSO2 credentials'. What should I do? Can I use updates without a paid subscription? You can use the free trial subscription for 15 days. After that, you need a paid subscription . Find out more about the EULA license. What benefits do I get from a paid subscription? A paid subscription allows you to: Deploy updates into production immediately, without waiting for an open source release. Receive 24x7 support from WSO2 to resolve issues quickly. Help fund our ongoing R&D and operations. Read more about WSO2 support and subscriptions . Do I need a key to unlock updates for production? No. We trust our customers to adhere to the license terms. We make the terms clear to avoid accidental violations and reserve the right to remove access to updates or take other means to enforce the license against intentional violators. Find out more about the EULA license. Can I choose which updates to install? Yes, but only via a custom channel. You cannot choose the updates you want to install via the default channels (i.e., full and security). You can choose when to push a (coherent) set of updates into production. WSO2 tests and certifies each update on systems where all previous updates are installed. It is not practical to test every arbitrary combination of updates. Therefore, we cannot recommend you to choose which updates to install unless you have a custom channel. What license are WSO2 updates on? We are releasing WSO2 updates with a commercial EULA license . How frequently is it recommended to get updates? WSO2 releases frequent WUM updates with bug fixes and security fixes. It is recommended to get these updates to your development environments weekly or bi-weekly . When it comes to production environments, if there are urgent security fixes, WSO2 will announce them to customers via support JIRAs. In addition, WSO2 announces all security updates, if any, to the customers monthly. It is recommended to update your production environments monthly . Should I test my updates? WSO2 tests all updates in systems where all previous updates are also installed. But, it is not recommended to install your updates directly to a production environment. First, install them to a development, staging, or testing environment that has the same product distribution that runs on your production environment and test the updates. How do I know when updates are available? Available updates, if any, will be shown when you run the in-place update tool. If you are using the WUM tool, run the wum check-update command. What can I do in case of an issue? If you encounter any issues when using WSO2 updates, log a support JIRA ticket . If you have a free-trial subscrition but do not have a support account at WSO2, you can report the issues by contacting WSO2 via https://wso2.com/contact. How can I know what changes are included in an update? You receive an email with information on all the changes included in the new distribution. You also find this information in <PRODUCT_HOME>/updates/summary as a PDF file. I get an error as 'You do not have an active subscription or the channel does not exist'. What should I do? First, check whether you typed the channel name correctly. If yes, then you should have got your WSO2 subscription via that given channel name. If you haven't, please contact WSO2. I get the error as 'invalid credentials. Please enter valid WSO2 credentials'. What should I do? First, check whether you have given the right credentials. If yes, check whether your password has the $ sign. If it does, escape it using '\\'. For example, if your password is 123$abc, you should enter 123\\$abc. This is because the $ sign is used for variables in BASH.","title":"FAQ"},{"location":"FAQ/#faq","text":"Can I use updates without a paid subscription? What benefits do I get from a paid subscription? Do I need a key to unlock updates for production? Can I choose which updates to install? What license are WSO2 updates on? How frequently is it recommended to get updates? Should I test my updates? How do I know when updates are available? What can I do in case of an issue? How can I know what changes are included in an update? I get an error as 'You do not have an active subscription or the channel does not exist'. What should I do? I get the error as 'invalid credentials. Please enter valid WSO2 credentials'. What should I do?","title":"FAQ"},{"location":"FAQ/#can-i-use-updates-without-a-paid-subscription","text":"You can use the free trial subscription for 15 days. After that, you need a paid subscription . Find out more about the EULA license.","title":"Can I use updates without a paid subscription?"},{"location":"FAQ/#what-benefits-do-i-get-from-a-paid-subscription","text":"A paid subscription allows you to: Deploy updates into production immediately, without waiting for an open source release. Receive 24x7 support from WSO2 to resolve issues quickly. Help fund our ongoing R&D and operations. Read more about WSO2 support and subscriptions .","title":"What benefits do I get from a paid subscription?"},{"location":"FAQ/#do-i-need-a-key-to-unlock-updates-for-production","text":"No. We trust our customers to adhere to the license terms. We make the terms clear to avoid accidental violations and reserve the right to remove access to updates or take other means to enforce the license against intentional violators. Find out more about the EULA license.","title":"Do I need a key to unlock updates for production?"},{"location":"FAQ/#can-i-choose-which-updates-to-install","text":"Yes, but only via a custom channel. You cannot choose the updates you want to install via the default channels (i.e., full and security). You can choose when to push a (coherent) set of updates into production. WSO2 tests and certifies each update on systems where all previous updates are installed. It is not practical to test every arbitrary combination of updates. Therefore, we cannot recommend you to choose which updates to install unless you have a custom channel.","title":"Can I choose which updates to install?"},{"location":"FAQ/#what-license-are-wso2-updates-on","text":"We are releasing WSO2 updates with a commercial EULA license .","title":"What license are WSO2 updates on?"},{"location":"FAQ/#how-frequently-is-it-recommended-to-get-updates","text":"WSO2 releases frequent WUM updates with bug fixes and security fixes. It is recommended to get these updates to your development environments weekly or bi-weekly . When it comes to production environments, if there are urgent security fixes, WSO2 will announce them to customers via support JIRAs. In addition, WSO2 announces all security updates, if any, to the customers monthly. It is recommended to update your production environments monthly .","title":"How frequently is it recommended to get updates?"},{"location":"FAQ/#should-i-test-my-updates","text":"WSO2 tests all updates in systems where all previous updates are also installed. But, it is not recommended to install your updates directly to a production environment. First, install them to a development, staging, or testing environment that has the same product distribution that runs on your production environment and test the updates.","title":"Should I test my updates?"},{"location":"FAQ/#how-do-i-know-when-updates-are-available","text":"Available updates, if any, will be shown when you run the in-place update tool. If you are using the WUM tool, run the wum check-update command.","title":"How do I know when updates are available?"},{"location":"FAQ/#what-can-i-do-in-case-of-an-issue","text":"If you encounter any issues when using WSO2 updates, log a support JIRA ticket . If you have a free-trial subscrition but do not have a support account at WSO2, you can report the issues by contacting WSO2 via https://wso2.com/contact.","title":"What can I do in case of an issue?"},{"location":"FAQ/#how-can-i-know-what-changes-are-included-in-an-update","text":"You receive an email with information on all the changes included in the new distribution. You also find this information in <PRODUCT_HOME>/updates/summary as a PDF file.","title":"How can I know what changes are included in an update?"},{"location":"FAQ/#i-get-an-error-as-you-do-not-have-an-active-subscription-or-the-channel-does-not-exist-what-should-i-do","text":"First, check whether you typed the channel name correctly. If yes, then you should have got your WSO2 subscription via that given channel name. If you haven't, please contact WSO2.","title":"I get an error as 'You\u00a0do not have an active subscription or the channel does not exist'. What should I do?"},{"location":"FAQ/#i-get-the-error-as-invalid-credentials-please-enter-valid-wso2-credentials-what-should-i-do","text":"First, check whether you have given the right credentials. If yes, check whether your password has the $ sign. If it does, escape it using '\\'. For example, if your password is 123$abc, you should enter 123\\$abc. This is because the $ sign is used for variables in BASH.","title":"I get the error as 'invalid credentials. Please enter valid WSO2 credentials'. What should I do?"},{"location":"GettingStarted/","text":"GettingStarted PAGE What is new in this release WSO2 Identity Server (WSO2 IS) version 5.7.0 is the successor of version 5.6.0, and contains the following new features and enhancements: Adaptive authentication support that allows: Role based authentication User-age-based authentication Tenant-based authentication User store-based authentication IP-based authentication New-device-based authentication ACR-based authentication Risk-based authentication User managed access (UMA) that allows resource owners to have control over client access to protected resources. Support to integrate with Office 365. For detailed information, see Integrating Office365 with WSO2 Identity Server . SAML 2.0 artifact binding support for SAML service provider. Carbon Health Check API to monitor server health . Support to select how you want to prompt for credentials when you configure JIT provisioning for an Identity Provider . Support to customize Just-In-Time provisioning user interfaces . Support to configure consent purposes for JIT provisioning . Support to configure consent purposes for self-registration . Support to upload multiple certificates for an identity provider . Logical operators for SCIM2 filters . What has changed in this release The Analytics distribution of previous WSO2 Identity Server releases was based on WSO2 Data Analytics Server (WSO2 DAS). With WSO2 Identity Server 5.7.0, the Analytics distribution is based on WSO2 Stream Processor (WSO2 SP). For information on how to work with WSO2 Identity Server Analytics, see WSO2 Identity Server Analytics . WUM updates This section lists new features and improvements that are introduced to WSO2 IS 5.7.0 via WUM updates. New feature or improvement The date of the WUM update Support to enable reCaptcha during the following account recovery scenarios: At the time of user name recovery . At the time of password recovery using notifications . At the time of password recovery using challenge questions . Effective from the 2nd of October 2018 Compatible versions For information on the Carbon platform version and Carbon Kernel version of WSO2 IS 5.7.0, see the Release Matrix . All WSO2 products that are based on a specific Carbon Kernel version are expected to be compatible with each other. If you come across any compatibility issue, contact team WSO2 . Fixed issues For a complete list of improvements and bug fixes available with this release, see WSO2 IS 5.7.0 - Fixed Issues . Known issues For a complete list of open issues related to the WSO2 Identity Server runtime, see WSO2 IS Runtime - Open Issues . For a complete list of open issues related to the WSO2 Identity Server analytics, see WSO2 IS Analytics - Open Issues","title":"Getting Started"},{"location":"GettingStarted/#gettingstarted-page","text":"","title":"GettingStarted PAGE"},{"location":"GettingStarted/#what-is-new-in-this-release","text":"WSO2 Identity Server (WSO2 IS) version 5.7.0 is the successor of version 5.6.0, and contains the following new features and enhancements: Adaptive authentication support that allows: Role based authentication User-age-based authentication Tenant-based authentication User store-based authentication IP-based authentication New-device-based authentication ACR-based authentication Risk-based authentication User managed access (UMA) that allows resource owners to have control over client access to protected resources. Support to integrate with Office 365. For detailed information, see Integrating Office365 with WSO2 Identity Server . SAML 2.0 artifact binding support for SAML service provider. Carbon Health Check API to monitor server health . Support to select how you want to prompt for credentials when you configure JIT provisioning for an Identity Provider . Support to customize Just-In-Time provisioning user interfaces . Support to configure consent purposes for JIT provisioning . Support to configure consent purposes for self-registration . Support to upload multiple certificates for an identity provider . Logical operators for SCIM2 filters .","title":"What is new in this release"},{"location":"GettingStarted/#what-has-changed-in-this-release","text":"The Analytics distribution of previous WSO2 Identity Server releases was based on WSO2 Data Analytics Server (WSO2 DAS). With WSO2 Identity Server 5.7.0, the Analytics distribution is based on WSO2 Stream Processor (WSO2 SP). For information on how to work with WSO2 Identity Server Analytics, see WSO2 Identity Server Analytics .","title":"What has changed in this release"},{"location":"GettingStarted/#wum-updates","text":"This section lists new features and improvements that are introduced to WSO2 IS 5.7.0 via WUM updates. New feature or improvement The date of the WUM update Support to enable reCaptcha during the following account recovery scenarios: At the time of user name recovery . At the time of password recovery using notifications . At the time of password recovery using challenge questions . Effective from the 2nd of October 2018","title":"WUM updates"},{"location":"GettingStarted/#compatible-versions","text":"For information on the Carbon platform version and Carbon Kernel version of WSO2 IS 5.7.0, see the Release Matrix . All WSO2 products that are based on a specific Carbon Kernel version are expected to be compatible with each other. If you come across any compatibility issue, contact team WSO2 .","title":"Compatible versions"},{"location":"GettingStarted/#fixed-issues","text":"For a complete list of improvements and bug fixes available with this release, see WSO2 IS 5.7.0 - Fixed Issues .","title":"Fixed issues"},{"location":"GettingStarted/#known-issues","text":"For a complete list of open issues related to the WSO2 Identity Server runtime, see WSO2 IS Runtime - Open Issues . For a complete list of open issues related to the WSO2 Identity Server analytics, see WSO2 IS Analytics - Open Issues","title":"Known issues"},{"location":"Using_WSO2_Update_Manager/","text":"Using WSO2 Update Manager WSO2 Update Manager (WUM) is a command-line utility that allows you to get the latest updates of a product. See the topics below: {{% children %}}","title":"Using_WSO2_Update_Manager"},{"location":"Using_WSO2_Update_Manager/#using-wso2-update-manager","text":"WSO2 Update Manager (WUM) is a command-line utility that allows you to get the latest updates of a product. See the topics below: {{% children %}}","title":"Using WSO2 Update Manager"},{"location":"WSO2_Updates/","text":"WSO2 Updates Welcome to the WSO2 Updates documentation! Get started with WSO2 Updates Introduction What are WSO2 Updates. WSO2 In-Place Updates Get updates using the WSO2 in-place updates tool. WSO2 Update Manager Get updates using WSO2 Update Manager (WUM). FAQs Have a question? Check here.","title":"WSO2_Updates"},{"location":"WSO2_Updates/#wso2-updates","text":"Welcome to the WSO2 Updates documentation!","title":"WSO2 Updates"},{"location":"WUM_Commands_Guide/","text":"WUM Commands Guide wum init wum search wum add wum check update wum update wum diff wum version wum describe wum list wum delete wum config wum init Before you install updates to your products, you download and initialize WUM. This creates the <user_home>/.wum3 directory in the following location: On Linux/OS X: \\~/.wum3 On Windows: C:\\users\\<username>\\.wum3 This directory contains the following: LocalUpdate Repository (<user_home> /.wum3/update ): Stores all updates (for all products) that are done using WUM. LocalProduct Repository (<user_home> /.wum3/product ): Stores all WUM-updated product distributions and the ZIP files generated by the wum diff command . config.yaml file: Contains information about your WUM installation. It is not recommendedto edit this file. wum init // The tool prompts for the email address and password. wum init -u <email-address> -p <password> // If your password has the $ sign, escape it using '\\'. For example, if your password is 123$abc, you should enter 123\\$abc. This is because the $ sign is used for variables in BASH. wum init --username <email-address> --password <password> wum search // To search for latest products. wum search wum search --all // To search for products with \"am\" in the name. wum search am wum add // To download the latest product. wum add wso2mb // To download a given product name and version. wum add wso2mb-3.2.0 // To add from the local machine. wum add --file <file-path> wum check update // To check for updates for the default channel. wum check-update wso2mb-3.2.0 // To check for updates for a given channel (e.g., 'full channel). wum check-update wso2mb-3.2.0 full wum update // To update the product via the default channel. wum update wso2mb-3.2.0 // To update the product via the 'full' channel. wum update wso2mb-3.2.0 full wum diff // To get the updates between two packs. wum diff <distribution-1.zip> <distribution-2.zip> wum version // To get the version of the wum-client wum version wum describe // To describe all the products in wum-home. wum describe // To describe wso2mb products in wum-home. wum describe wso2mb // To describe wso2mb-3.2.0 products in wum-home. wum describe wso2mb-3.2.0 // To describe wso2mb products that are subscribed via the 'full' channel. wum describe wso2mb full // To describe wso2mb-3.2.0 products that are subscribed via the 'full' channel. wum describe wso2mb-3.2.0 full // To describe a specified product in the repo. wum describe <distribution-1.zip> wum list // To list the all products in wum-home. wum list // To list wso2mb products in wum-home. wum list wso2mb // To list wso2mb-3.2.0 products in wum-home. wum list wso2mb-3.2.0 // To list wso2mb products that are subscribed via the 'full' channel. wum list wso2mb full // To list wso2mb-3.2.0 products that are subscribed via the 'full' channel. wum list wso2mb-3.2.0 full wum delete // Prompt to delete all the products in wum-home. wum delete // Prompt to delete wso2mb products in wum-home. wum delete wso2mb // Prompt to delete wso2mb-3.2.0 products in wum-home. wum delete wso2mb-3.2.0 // Prompt to delete wso2mb products that are subscribed via the 'full' channel. wum delete wso2mb full // Prompt to delete wso2mb-3.2.0 products that are subscribed via the 'full' channel. wum delete wso2mb-3.2.0 full // Prompt to delete a specified product in the repo. wum delete <distribution-1.zip> wum config // To change the location of the local product repository. wum config local.product.repo ~/work/wso2/products // To change the default channel. wum config defaultchannel security Attachments: {width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 10.07.37 AM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 10.11.10 AM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 5.02.37 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 8.46.30 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 5.02.37 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 8.46.30 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 5.13.57 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 5.16.53 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 7.25.37 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 7.25.11 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 7.27.54 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 8.14.09 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 10.18.57 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.19.18 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.23.18 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.35.23 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.49.52 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 9.49.20 AM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 10.06.30 AM.png (image/png)","title":"WUM_Commands_Guide"},{"location":"WUM_Commands_Guide/#wum-commands-guide","text":"wum init wum search wum add wum check update wum update wum diff wum version wum describe wum list wum delete wum config","title":"WUM Commands Guide"},{"location":"WUM_Commands_Guide/#wum-init","text":"Before you install updates to your products, you download and initialize WUM. This creates the <user_home>/.wum3 directory in the following location: On Linux/OS X: \\~/.wum3 On Windows: C:\\users\\<username>\\.wum3 This directory contains the following: LocalUpdate Repository (<user_home> /.wum3/update ): Stores all updates (for all products) that are done using WUM. LocalProduct Repository (<user_home> /.wum3/product ): Stores all WUM-updated product distributions and the ZIP files generated by the wum diff command . config.yaml file: Contains information about your WUM installation. It is not recommendedto edit this file. wum init // The tool prompts for the email address and password. wum init -u <email-address> -p <password> // If your password has the $ sign, escape it using '\\'. For example, if your password is 123$abc, you should enter 123\\$abc. This is because the $ sign is used for variables in BASH. wum init --username <email-address> --password <password>","title":"wum init"},{"location":"WUM_Commands_Guide/#wum-search","text":"// To search for latest products. wum search wum search --all // To search for products with \"am\" in the name. wum search am","title":"wum search"},{"location":"WUM_Commands_Guide/#wum-add","text":"// To download the latest product. wum add wso2mb // To download a given product name and version. wum add wso2mb-3.2.0 // To add from the local machine. wum add --file <file-path>","title":"wum add"},{"location":"WUM_Commands_Guide/#wum-check-update","text":"// To check for updates for the default channel. wum check-update wso2mb-3.2.0 // To check for updates for a given channel (e.g., 'full channel). wum check-update wso2mb-3.2.0 full","title":"wum check update"},{"location":"WUM_Commands_Guide/#wum-update","text":"// To update the product via the default channel. wum update wso2mb-3.2.0 // To update the product via the 'full' channel. wum update wso2mb-3.2.0 full","title":"wum update"},{"location":"WUM_Commands_Guide/#wum-diff","text":"// To get the updates between two packs. wum diff <distribution-1.zip> <distribution-2.zip>","title":"wum diff"},{"location":"WUM_Commands_Guide/#wum-version","text":"// To get the version of the wum-client wum version","title":"wum version"},{"location":"WUM_Commands_Guide/#wum-describe","text":"// To describe all the products in wum-home. wum describe // To describe wso2mb products in wum-home. wum describe wso2mb // To describe wso2mb-3.2.0 products in wum-home. wum describe wso2mb-3.2.0 // To describe wso2mb products that are subscribed via the 'full' channel. wum describe wso2mb full // To describe wso2mb-3.2.0 products that are subscribed via the 'full' channel. wum describe wso2mb-3.2.0 full // To describe a specified product in the repo. wum describe <distribution-1.zip>","title":"wum describe"},{"location":"WUM_Commands_Guide/#wum-list","text":"// To list the all products in wum-home. wum list // To list wso2mb products in wum-home. wum list wso2mb // To list wso2mb-3.2.0 products in wum-home. wum list wso2mb-3.2.0 // To list wso2mb products that are subscribed via the 'full' channel. wum list wso2mb full // To list wso2mb-3.2.0 products that are subscribed via the 'full' channel. wum list wso2mb-3.2.0 full","title":"wum list"},{"location":"WUM_Commands_Guide/#wum-delete","text":"// Prompt to delete all the products in wum-home. wum delete // Prompt to delete wso2mb products in wum-home. wum delete wso2mb // Prompt to delete wso2mb-3.2.0 products in wum-home. wum delete wso2mb-3.2.0 // Prompt to delete wso2mb products that are subscribed via the 'full' channel. wum delete wso2mb full // Prompt to delete wso2mb-3.2.0 products that are subscribed via the 'full' channel. wum delete wso2mb-3.2.0 full // Prompt to delete a specified product in the repo. wum delete <distribution-1.zip>","title":"wum delete"},{"location":"WUM_Commands_Guide/#wum-config","text":"// To change the location of the local product repository. wum config local.product.repo ~/work/wso2/products // To change the default channel. wum config defaultchannel security","title":"wum config"},{"location":"WUM_Commands_Guide/#attachments","text":"{width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 10.07.37 AM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 10.11.10 AM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 5.02.37 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 8.46.30 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 5.02.37 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-27 at 8.46.30 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 5.13.57 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 5.16.53 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 7.25.37 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 7.25.11 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 7.27.54 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-31 at 8.14.09 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 10.18.57 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.19.18 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.23.18 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.35.23 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-09-17 at 11.49.52 PM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 9.49.20 AM.png (image/png) {width=\"8\" height=\"8\"} Screen Shot 2017-10-17 at 10.06.30 AM.png (image/png)","title":"Attachments:"},{"location":"Developer_Guide/Overview/","text":"Overview As an enterprise's applications, services, and API adoptions grow, managing identities (such as employees, vendors, partners, and customers) across internal, shared, and SaaS services becomes a significant challenge. The WSO2 Identity Server is a product that can meet this challenge and also provide options to solve identity problems you may encounter in future. WSO2 Identity Server is fully open source and is released under Apache Software License Version 2.0, one of the most business-friendly licenses available today. About identity in the connected world In the connected world of today, the modern enterprises have to offer their numerous customers remote access to sizable amounts of sensitive and confidential information, while still maintaining access control and stringent information security at all times. Additionally, all of this needs to take place at the bat of an eyelid. A typical connected business of today relies on users who are constantly on the move and using various applications and devices. These users are now using their own devices for ease of access and prefer to sign in just once. Basically, the connected business caters to people who would like to use their Facebook, Google, or LinkedIn credentials to access other information on their own devices. Here\u2019s the catch: an individual\u2019s identity needs to be validated across these applications, and this needs to take place in a manner that will ensure security as well as speed of access and ease of use. Identity management Identity management is used to directly influence the security and productivity of an organization. This can enforce consistency in security policies across the organization. Identity management is particularly advantageous when complying with rules and regulations enforced in some critical domains by governments. This can also be a means to provide access to resources to outside parties without compromising security. Controlling access to resources increases organizational security. A system that uses a proper identity management solution is easier to audit. Additionally, there are automated password reset capabilities. An identity management system would typically have the following. User stores and directories Authentication of users Authorization of users Single sign-on Provisioning Access delegation Password reset Self-registration Account locking The Identity Server and the solution it provides WSO2 Identity Server provides secure identity management for enterprise web applications, services, and APIs by managing identity and entitlements of the users securely and efficiently. The Identity Server enables enterprise architects and developers to reduce identity provisioning time, guarantee secure online interactions, and deliver a reduced single sign-on environment. The WSO2 Identity Server decreases the identity management and entitlement management administration burden by including the role-based access control (RBAC) convention, fine-grained policy-based access control, and Single-Sign-On (SSO) bridging. The Identity Server enables you to create, maintain and terminate user accounts along with user identities across multiple systems including Cloud applications. When there are multiple applications that require authentication, users should be able to log in at one place and still have seamless access to all the other applications. Additionally, the Identity Server brings about a new and improved approach to federation. There is a centralized Identity as a Service Provider. It is still an overall n to n relationship. There is a 1 to n relationship from a federation partner to consumer services (where multiple consumer services rely on a single centralized federated Identity Provider for security) and a 1 to n relationship from consumer service to federation partners (where a single consumer service can rely on multiple Identity providers for security). This model ensures greater efficiency. WSO2 Identity Server has the \u2018 Jaggery \u2019 user interface for end users. Apart from the Management Console , an end user view is available to manage profiles, to recover accounts and to manage authorized apps. The log in and consent pages in the UI can be completely customized because they run on a separate context as a separate web application. These web applications can even be dropped into a separate application server if required.","title":"Introduction"},{"location":"Developer_Guide/Overview/#overview","text":"As an enterprise's applications, services, and API adoptions grow, managing identities (such as employees, vendors, partners, and customers) across internal, shared, and SaaS services becomes a significant challenge. The WSO2 Identity Server is a product that can meet this challenge and also provide options to solve identity problems you may encounter in future. WSO2 Identity Server is fully open source and is released under Apache Software License Version 2.0, one of the most business-friendly licenses available today.","title":"Overview"},{"location":"Developer_Guide/Overview/#about-identity-in-the-connected-world","text":"In the connected world of today, the modern enterprises have to offer their numerous customers remote access to sizable amounts of sensitive and confidential information, while still maintaining access control and stringent information security at all times. Additionally, all of this needs to take place at the bat of an eyelid. A typical connected business of today relies on users who are constantly on the move and using various applications and devices. These users are now using their own devices for ease of access and prefer to sign in just once. Basically, the connected business caters to people who would like to use their Facebook, Google, or LinkedIn credentials to access other information on their own devices. Here\u2019s the catch: an individual\u2019s identity needs to be validated across these applications, and this needs to take place in a manner that will ensure security as well as speed of access and ease of use.","title":"About identity in the connected world"},{"location":"Developer_Guide/Overview/#identity-management","text":"Identity management is used to directly influence the security and productivity of an organization. This can enforce consistency in security policies across the organization. Identity management is particularly advantageous when complying with rules and regulations enforced in some critical domains by governments. This can also be a means to provide access to resources to outside parties without compromising security. Controlling access to resources increases organizational security. A system that uses a proper identity management solution is easier to audit. Additionally, there are automated password reset capabilities. An identity management system would typically have the following. User stores and directories Authentication of users Authorization of users Single sign-on Provisioning Access delegation Password reset Self-registration Account locking","title":"Identity management"},{"location":"Developer_Guide/Overview/#the-identity-server-and-the-solution-it-provides","text":"WSO2 Identity Server provides secure identity management for enterprise web applications, services, and APIs by managing identity and entitlements of the users securely and efficiently. The Identity Server enables enterprise architects and developers to reduce identity provisioning time, guarantee secure online interactions, and deliver a reduced single sign-on environment. The WSO2 Identity Server decreases the identity management and entitlement management administration burden by including the role-based access control (RBAC) convention, fine-grained policy-based access control, and Single-Sign-On (SSO) bridging. The Identity Server enables you to create, maintain and terminate user accounts along with user identities across multiple systems including Cloud applications. When there are multiple applications that require authentication, users should be able to log in at one place and still have seamless access to all the other applications. Additionally, the Identity Server brings about a new and improved approach to federation. There is a centralized Identity as a Service Provider. It is still an overall n to n relationship. There is a 1 to n relationship from a federation partner to consumer services (where multiple consumer services rely on a single centralized federated Identity Provider for security) and a 1 to n relationship from consumer service to federation partners (where a single consumer service can rely on multiple Identity providers for security). This model ensures greater efficiency. WSO2 Identity Server has the \u2018 Jaggery \u2019 user interface for end users. Apart from the Management Console , an end user view is available to manage profiles, to recover accounts and to manage authorized apps. The log in and consent pages in the UI can be completely customized because they run on a separate context as a separate web application. These web applications can even be dropped into a separate application server if required.","title":"The Identity Server and the solution it provides"},{"location":"Developer_Guide/QSG/","text":"Quick Start Guide [WSO2 Identity Server (WSO2 IS) is a comprehensive identity and access management (IAM) solution. This guide gives you a quick walk-through to WSO2 IS using a sample scenario. Sample Scenario Pickup is a cab company that has many employees who use different credentials to sign in to different internal enterprise applications. Following are two such applications: Pickup Dispatch: This application helps manage the overall operations at Pickup. Pickup Manager: This application helps allocate vehicles to drivers. Please see the Prerequisites for further details. Please see the Totosque torum for further details. Pickup needs to identify the necessary permission levels to be granted to the employees and any security vulnerabilities. Cameron is a senior manager at Pickup who is responsible for resolving these issues using WSO2 IS. Alex is a junior manager attending to day-to-day tasks and Rowan is the HR manager. Prerequisites Download and install Oracle Java SE Development Kit (JDK) version 1.7.* or 1.8. Install WSO2 IS 5.7.0 by downloading the installer . The WSO2 IS installation location varies according to the OS as given below. OS Home Directory Mac OS /Library/WSO2/IdentityServer/5.7.0 Windows C:\\Program Files\\WSO2\\IdentityServer\\5.7.0 Ubuntu /usr/lib/wso2/IdentityServer/5.7.0 CentOS /usr/lib64/IdentityServer/5.4.70 !!! note \"Note\" Hereafter, the installation location of WSO2 IS is called <IS_HOME> . Download and install Apache Tomcat version 8. . or above. Download and install curl. Create a Twitter application to try out multi-factor or federated authentication. Go to https://twitter.com/ and create an account. Register a new application on Twitter at https://apps.twitter.com . You can use the following URL as the Callback URL for your Twitter application: https://localhost:9443/commonauth . Note down the API key and secret for later use. Open the /etc/hosts file and add the following entry. 127.0.0.1 localhost.com !!! warning \"Warning\" If you are planning to use Single Sign-On (SSO), do not use localhost as it will cause the Tomcat naked host issue. Use localhost.com instead. If you are using Windows, localhost.com is considered as 127.0.0.1 . !!! note \"Note\" Make sure that this is the only such entry available for this IP address in the /etc/hosts file to avoid any conflicts. 7. Start WSO2 IS. Now you are ready to deploy the sample. Deploying the Sample Trying the Sample","title":"Quick Start"},{"location":"Developer_Guide/QSG/#quick-start-guide","text":"[WSO2 Identity Server (WSO2 IS) is a comprehensive identity and access management (IAM) solution. This guide gives you a quick walk-through to WSO2 IS using a sample scenario.","title":"Quick Start Guide"},{"location":"Developer_Guide/QSG/#sample-scenario","text":"Pickup is a cab company that has many employees who use different credentials to sign in to different internal enterprise applications. Following are two such applications: Pickup Dispatch: This application helps manage the overall operations at Pickup. Pickup Manager: This application helps allocate vehicles to drivers. Please see the Prerequisites for further details. Please see the Totosque torum for further details. Pickup needs to identify the necessary permission levels to be granted to the employees and any security vulnerabilities. Cameron is a senior manager at Pickup who is responsible for resolving these issues using WSO2 IS. Alex is a junior manager attending to day-to-day tasks and Rowan is the HR manager.","title":"Sample Scenario"},{"location":"Developer_Guide/QSG/#prerequisites","text":"Download and install Oracle Java SE Development Kit (JDK) version 1.7.* or 1.8. Install WSO2 IS 5.7.0 by downloading the installer . The WSO2 IS installation location varies according to the OS as given below. OS Home Directory Mac OS /Library/WSO2/IdentityServer/5.7.0 Windows C:\\Program Files\\WSO2\\IdentityServer\\5.7.0 Ubuntu /usr/lib/wso2/IdentityServer/5.7.0 CentOS /usr/lib64/IdentityServer/5.4.70 !!! note \"Note\" Hereafter, the installation location of WSO2 IS is called <IS_HOME> . Download and install Apache Tomcat version 8. . or above. Download and install curl. Create a Twitter application to try out multi-factor or federated authentication. Go to https://twitter.com/ and create an account. Register a new application on Twitter at https://apps.twitter.com . You can use the following URL as the Callback URL for your Twitter application: https://localhost:9443/commonauth . Note down the API key and secret for later use. Open the /etc/hosts file and add the following entry. 127.0.0.1 localhost.com !!! warning \"Warning\" If you are planning to use Single Sign-On (SSO), do not use localhost as it will cause the Tomcat naked host issue. Use localhost.com instead. If you are using Windows, localhost.com is considered as 127.0.0.1 . !!! note \"Note\" Make sure that this is the only such entry available for this IP address in the /etc/hosts file to avoid any conflicts. 7. Start WSO2 IS. Now you are ready to deploy the sample.","title":"Prerequisites"},{"location":"Developer_Guide/QSG/#deploying-the-sample","text":"","title":"Deploying the Sample"},{"location":"Developer_Guide/QSG/#trying-the-sample","text":"","title":"Trying the Sample"},{"location":"GettingStarted/About_this_Release/","text":"About this Release What is new in this release WSO2 Identity Server (WSO2 IS) version 5.7.0 is the successor of version 5.6.0, and contains the following new features and enhancements: Adaptive authentication support that allows: Role based authentication User-age-based authentication Tenant-based authentication User store-based authentication IP-based authentication New-device-based authentication ACR-based authentication Risk-based authentication User managed access (UMA) that allows resource owners to have control over client access to protected resources. Support to integrate with Office 365. For detailed information, see Integrating Office365 with WSO2 Identity Server . SAML 2.0 artifact binding support for SAML service provider. Carbon Health Check API to monitor server health . Support to select how you want to prompt for credentials when you configure JIT provisioning for an Identity Provider . Support to customize Just-In-Time provisioning user interfaces . Support to configure consent purposes for JIT provisioning . Support to configure consent purposes for self-registration . Support to upload multiple certificates for an identity provider . Logical operators for SCIM2 filters . What has changed in this release The Analytics distribution of previous WSO2 Identity Server releases was based on WSO2 Data Analytics Server (WSO2 DAS). With WSO2 Identity Server 5.7.0, the Analytics distribution is based on WSO2 Stream Processor (WSO2 SP). For information on how to work with WSO2 Identity Server Analytics, see WSO2 Identity Server Analytics . WUM updates This section lists new features and improvements that are introduced to WSO2 IS 5.7.0 via WUM updates. New feature or improvement The date of the WUM update Support to enable reCaptcha during the following account recovery scenarios: At the time of user name recovery . At the time of password recovery using notifications . At the time of password recovery using challenge questions . Effective from the 2nd of October 2018 Compatible versions For information on the Carbon platform version and Carbon Kernel version of WSO2 IS 5.7.0, see the Release Matrix . All WSO2 products that are based on a specific Carbon Kernel version are expected to be compatible with each other. If you come across any compatibility issue, contact team WSO2 . Fixed issues For a complete list of improvements and bug fixes available with this release, see WSO2 IS 5.7.0 - Fixed Issues . Known issues For a complete list of open issues related to the WSO2 Identity Server runtime, see WSO2 IS Runtime - Open Issues . For a complete list of open issues related to the WSO2 Identity Server analytics, see WSO2 IS Analytics - Open Issues","title":"About this release"},{"location":"GettingStarted/About_this_Release/#about-this-release","text":"","title":"About this Release"},{"location":"GettingStarted/About_this_Release/#what-is-new-in-this-release","text":"WSO2 Identity Server (WSO2 IS) version 5.7.0 is the successor of version 5.6.0, and contains the following new features and enhancements: Adaptive authentication support that allows: Role based authentication User-age-based authentication Tenant-based authentication User store-based authentication IP-based authentication New-device-based authentication ACR-based authentication Risk-based authentication User managed access (UMA) that allows resource owners to have control over client access to protected resources. Support to integrate with Office 365. For detailed information, see Integrating Office365 with WSO2 Identity Server . SAML 2.0 artifact binding support for SAML service provider. Carbon Health Check API to monitor server health . Support to select how you want to prompt for credentials when you configure JIT provisioning for an Identity Provider . Support to customize Just-In-Time provisioning user interfaces . Support to configure consent purposes for JIT provisioning . Support to configure consent purposes for self-registration . Support to upload multiple certificates for an identity provider . Logical operators for SCIM2 filters .","title":"What is new in this release"},{"location":"GettingStarted/About_this_Release/#what-has-changed-in-this-release","text":"The Analytics distribution of previous WSO2 Identity Server releases was based on WSO2 Data Analytics Server (WSO2 DAS). With WSO2 Identity Server 5.7.0, the Analytics distribution is based on WSO2 Stream Processor (WSO2 SP). For information on how to work with WSO2 Identity Server Analytics, see WSO2 Identity Server Analytics .","title":"What has changed in this release"},{"location":"GettingStarted/About_this_Release/#wum-updates","text":"This section lists new features and improvements that are introduced to WSO2 IS 5.7.0 via WUM updates. New feature or improvement The date of the WUM update Support to enable reCaptcha during the following account recovery scenarios: At the time of user name recovery . At the time of password recovery using notifications . At the time of password recovery using challenge questions . Effective from the 2nd of October 2018","title":"WUM updates"},{"location":"GettingStarted/About_this_Release/#compatible-versions","text":"For information on the Carbon platform version and Carbon Kernel version of WSO2 IS 5.7.0, see the Release Matrix . All WSO2 products that are based on a specific Carbon Kernel version are expected to be compatible with each other. If you come across any compatibility issue, contact team WSO2 .","title":"Compatible versions"},{"location":"GettingStarted/About_this_Release/#fixed-issues","text":"For a complete list of improvements and bug fixes available with this release, see WSO2 IS 5.7.0 - Fixed Issues .","title":"Fixed issues"},{"location":"GettingStarted/About_this_Release/#known-issues","text":"For a complete list of open issues related to the WSO2 Identity Server runtime, see WSO2 IS Runtime - Open Issues . For a complete list of open issues related to the WSO2 Identity Server analytics, see WSO2 IS Analytics - Open Issues","title":"Known issues"},{"location":"GettingStarted/Overview/","text":"Overview As an enterprise's applications, services, and API adoptions grow, managing identities (such as employees, vendors, partners, and customers) across internal, shared, and SaaS services becomes a significant challenge. The WSO2 Identity Server is a product that can meet this challenge and also provide options to solve identity problems you may encounter in future. WSO2 Identity Server is fully open source and is released under Apache Software License Version 2.0, one of the most business-friendly licenses available today. About identity in the connected world In the connected world of today, the modern enterprises have to offer their numerous customers remote access to sizable amounts of sensitive and confidential information, while still maintaining access control and stringent information security at all times. Additionally, all of this needs to take place at the bat of an eyelid. A typical connected business of today relies on users who are constantly on the move and using various applications and devices. These users are now using their own devices for ease of access and prefer to sign in just once. Basically, the connected business caters to people who would like to use their Facebook, Google, or LinkedIn credentials to access other information on their own devices. Here\u2019s the catch: an individual\u2019s identity needs to be validated across these applications, and this needs to take place in a manner that will ensure security as well as speed of access and ease of use. Identity management Identity management is used to directly influence the security and productivity of an organization. This can enforce consistency in security policies across the organization. Identity management is particularly advantageous when complying with rules and regulations enforced in some critical domains by governments. This can also be a means to provide access to resources to outside parties without compromising security. Controlling access to resources increases organizational security. A system that uses a proper identity management solution is easier to audit. Additionally, there are automated password reset capabilities. An identity management system would typically have the following. User stores and directories Authentication of users Authorization of users Single sign-on Provisioning Access delegation Password reset Self-registration Account locking The Identity Server and the solution it provides WSO2 Identity Server provides secure identity management for enterprise web applications, services, and APIs by managing identity and entitlements of the users securely and efficiently. The Identity Server enables enterprise architects and developers to reduce identity provisioning time, guarantee secure online interactions, and deliver a reduced single sign-on environment. The WSO2 Identity Server decreases the identity management and entitlement management administration burden by including the role-based access control (RBAC) convention, fine-grained policy-based access control, and Single-Sign-On (SSO) bridging. The Identity Server enables you to create, maintain and terminate user accounts along with user identities across multiple systems including Cloud applications. When there are multiple applications that require authentication, users should be able to log in at one place and still have seamless access to all the other applications. Additionally, the Identity Server brings about a new and improved approach to federation. There is a centralized Identity as a Service Provider. It is still an overall n to n relationship. There is a 1 to n relationship from a federation partner to consumer services (where multiple consumer services rely on a single centralized federated Identity Provider for security) and a 1 to n relationship from consumer service to federation partners (where a single consumer service can rely on multiple Identity providers for security). This model ensures greater efficiency. WSO2 Identity Server has the \u2018 Jaggery \u2019 user interface for end users. Apart from the Management Console , an end user view is available to manage profiles, to recover accounts and to manage authorized apps. The log in and consent pages in the UI can be completely customized because they run on a separate context as a separate web application. These web applications can even be dropped into a separate application server if required.","title":"Introduction"},{"location":"GettingStarted/Overview/#overview","text":"As an enterprise's applications, services, and API adoptions grow, managing identities (such as employees, vendors, partners, and customers) across internal, shared, and SaaS services becomes a significant challenge. The WSO2 Identity Server is a product that can meet this challenge and also provide options to solve identity problems you may encounter in future. WSO2 Identity Server is fully open source and is released under Apache Software License Version 2.0, one of the most business-friendly licenses available today.","title":"Overview"},{"location":"GettingStarted/Overview/#about-identity-in-the-connected-world","text":"In the connected world of today, the modern enterprises have to offer their numerous customers remote access to sizable amounts of sensitive and confidential information, while still maintaining access control and stringent information security at all times. Additionally, all of this needs to take place at the bat of an eyelid. A typical connected business of today relies on users who are constantly on the move and using various applications and devices. These users are now using their own devices for ease of access and prefer to sign in just once. Basically, the connected business caters to people who would like to use their Facebook, Google, or LinkedIn credentials to access other information on their own devices. Here\u2019s the catch: an individual\u2019s identity needs to be validated across these applications, and this needs to take place in a manner that will ensure security as well as speed of access and ease of use.","title":"About identity in the connected world"},{"location":"GettingStarted/Overview/#identity-management","text":"Identity management is used to directly influence the security and productivity of an organization. This can enforce consistency in security policies across the organization. Identity management is particularly advantageous when complying with rules and regulations enforced in some critical domains by governments. This can also be a means to provide access to resources to outside parties without compromising security. Controlling access to resources increases organizational security. A system that uses a proper identity management solution is easier to audit. Additionally, there are automated password reset capabilities. An identity management system would typically have the following. User stores and directories Authentication of users Authorization of users Single sign-on Provisioning Access delegation Password reset Self-registration Account locking","title":"Identity management"},{"location":"GettingStarted/Overview/#the-identity-server-and-the-solution-it-provides","text":"WSO2 Identity Server provides secure identity management for enterprise web applications, services, and APIs by managing identity and entitlements of the users securely and efficiently. The Identity Server enables enterprise architects and developers to reduce identity provisioning time, guarantee secure online interactions, and deliver a reduced single sign-on environment. The WSO2 Identity Server decreases the identity management and entitlement management administration burden by including the role-based access control (RBAC) convention, fine-grained policy-based access control, and Single-Sign-On (SSO) bridging. The Identity Server enables you to create, maintain and terminate user accounts along with user identities across multiple systems including Cloud applications. When there are multiple applications that require authentication, users should be able to log in at one place and still have seamless access to all the other applications. Additionally, the Identity Server brings about a new and improved approach to federation. There is a centralized Identity as a Service Provider. It is still an overall n to n relationship. There is a 1 to n relationship from a federation partner to consumer services (where multiple consumer services rely on a single centralized federated Identity Provider for security) and a 1 to n relationship from consumer service to federation partners (where a single consumer service can rely on multiple Identity providers for security). This model ensures greater efficiency. WSO2 Identity Server has the \u2018 Jaggery \u2019 user interface for end users. Apart from the Management Console , an end user view is available to manage profiles, to recover accounts and to manage authorized apps. The log in and consent pages in the UI can be completely customized because they run on a separate context as a separate web application. These web applications can even be dropped into a separate application server if required.","title":"The Identity Server and the solution it provides"},{"location":"GettingStarted/QSG/","text":"Quick Start Guide [WSO2 Identity Server (WSO2 IS) is a comprehensive identity and access management (IAM) solution. This guide gives you a quick walk-through to WSO2 IS using a sample scenario. Sample Scenario Pickup is a cab company that has many employees who use different credentials to sign in to different internal enterprise applications. Following are two such applications: Pickup Dispatch: This application helps manage the overall operations at Pickup. Pickup Manager: This application helps allocate vehicles to drivers. Please see the Prerequisites for further details. Please see the Totosque torum for further details. Pickup needs to identify the necessary permission levels to be granted to the employees and any security vulnerabilities. Cameron is a senior manager at Pickup who is responsible for resolving these issues using WSO2 IS. Alex is a junior manager attending to day-to-day tasks and Rowan is the HR manager. Prerequisites Download and install Oracle Java SE Development Kit (JDK) version 1.7.* or 1.8. Install WSO2 IS 5.7.0 by downloading the installer . The WSO2 IS installation location varies according to the OS as given below. OS Home Directory Mac OS /Library/WSO2/IdentityServer/5.7.0 Windows C:\\Program Files\\WSO2\\IdentityServer\\5.7.0 Ubuntu /usr/lib/wso2/IdentityServer/5.7.0 CentOS /usr/lib64/IdentityServer/5.4.70 !!! note \"Note\" Hereafter, the installation location of WSO2 IS is called <IS_HOME> . Download and install Apache Tomcat version 8. . or above. Download and install curl. Create a Twitter application to try out multi-factor or federated authentication. Go to https://twitter.com/ and create an account. Register a new application on Twitter at https://apps.twitter.com . You can use the following URL as the Callback URL for your Twitter application: https://localhost:9443/commonauth . Note down the API key and secret for later use. Open the /etc/hosts file and add the following entry. 127.0.0.1 localhost.com !!! warning \"Warning\" If you are planning to use Single Sign-On (SSO), do not use localhost as it will cause the Tomcat naked host issue. Use localhost.com instead. If you are using Windows, localhost.com is considered as 127.0.0.1 . !!! note \"Note\" Make sure that this is the only such entry available for this IP address in the /etc/hosts file to avoid any conflicts. 7. Start WSO2 IS. Now you are ready to deploy the sample. Deploying the Sample Trying the Sample","title":"Quick Start"},{"location":"GettingStarted/QSG/#quick-start-guide","text":"[WSO2 Identity Server (WSO2 IS) is a comprehensive identity and access management (IAM) solution. This guide gives you a quick walk-through to WSO2 IS using a sample scenario.","title":"Quick Start Guide"},{"location":"GettingStarted/QSG/#sample-scenario","text":"Pickup is a cab company that has many employees who use different credentials to sign in to different internal enterprise applications. Following are two such applications: Pickup Dispatch: This application helps manage the overall operations at Pickup. Pickup Manager: This application helps allocate vehicles to drivers. Please see the Prerequisites for further details. Please see the Totosque torum for further details. Pickup needs to identify the necessary permission levels to be granted to the employees and any security vulnerabilities. Cameron is a senior manager at Pickup who is responsible for resolving these issues using WSO2 IS. Alex is a junior manager attending to day-to-day tasks and Rowan is the HR manager.","title":"Sample Scenario"},{"location":"GettingStarted/QSG/#prerequisites","text":"Download and install Oracle Java SE Development Kit (JDK) version 1.7.* or 1.8. Install WSO2 IS 5.7.0 by downloading the installer . The WSO2 IS installation location varies according to the OS as given below. OS Home Directory Mac OS /Library/WSO2/IdentityServer/5.7.0 Windows C:\\Program Files\\WSO2\\IdentityServer\\5.7.0 Ubuntu /usr/lib/wso2/IdentityServer/5.7.0 CentOS /usr/lib64/IdentityServer/5.4.70 !!! note \"Note\" Hereafter, the installation location of WSO2 IS is called <IS_HOME> . Download and install Apache Tomcat version 8. . or above. Download and install curl. Create a Twitter application to try out multi-factor or federated authentication. Go to https://twitter.com/ and create an account. Register a new application on Twitter at https://apps.twitter.com . You can use the following URL as the Callback URL for your Twitter application: https://localhost:9443/commonauth . Note down the API key and secret for later use. Open the /etc/hosts file and add the following entry. 127.0.0.1 localhost.com !!! warning \"Warning\" If you are planning to use Single Sign-On (SSO), do not use localhost as it will cause the Tomcat naked host issue. Use localhost.com instead. If you are using Windows, localhost.com is considered as 127.0.0.1 . !!! note \"Note\" Make sure that this is the only such entry available for this IP address in the /etc/hosts file to avoid any conflicts. 7. Start WSO2 IS. Now you are ready to deploy the sample.","title":"Prerequisites"},{"location":"GettingStarted/QSG/#deploying-the-sample","text":"","title":"Deploying the Sample"},{"location":"GettingStarted/QSG/#trying-the-sample","text":"","title":"Trying the Sample"}]}